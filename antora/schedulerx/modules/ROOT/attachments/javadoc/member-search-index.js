memberSearchIndex = [{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"__TYPE_ARG"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"__typeArg_0"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"__typeArg_1"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"__typeArg_2"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"__typeArg_2"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"AbstractScheduler(Vertx, TimeClock, SchedulingMonitor<OUT>, Job<IN, OUT>, JobData<IN>, TimeoutPolicy, T, TriggerEvaluator)","u":"%3Cinit%3E(io.vertx.core.Vertx,io.github.zero88.schedulerx.TimeClock,io.github.zero88.schedulerx.SchedulingMonitor,io.github.zero88.schedulerx.Job,io.github.zero88.schedulerx.JobData,io.github.zero88.schedulerx.TimeoutPolicy,T,io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"AbstractSchedulerBuilder()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTriggerBuilder","l":"address(String)","u":"address(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"addToSet(int, int, int, int)","u":"addToSet(int,int,int,int)"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"afterTrigger(Trigger, TriggerContext, Object, long)","u":"afterTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object,long)"},{"p":"io.github.zero88.schedulerx.trigger","c":"AfterTriggerEvaluator","l":"afterTrigger(Trigger, TriggerContext, Object, long)","u":"afterTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object,long)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"ALL_SPEC"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"ALL_SPEC_INT"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"ALREADY_STOPPED"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeframeValidator","l":"and(TimeframeValidator)","u":"and(io.github.zero88.schedulerx.trigger.rule.TimeframeValidator)"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"andThen(TriggerEvaluator)","u":"andThen(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerEvaluator","l":"andThen(TriggerEvaluator)","u":"andThen(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"any()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AllowAnyMessageBodyType","l":"apply(MultiMap, Object)","u":"apply(io.vertx.core.MultiMap,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AutoCastMessageBody","l":"apply(MultiMap, Object)","u":"apply(io.vertx.core.MultiMap,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.MessageConverter","l":"apply(MultiMap, Object)","u":"apply(io.vertx.core.MultiMap,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"TriggerRepresentationMapper","l":"apply(T)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"availableAt()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"availableAt()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeframeValidator","l":"BASE"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"beforeTrigger(Trigger, TriggerContext, Object)","u":"beforeTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger","c":"BeforeTriggerEvaluator","l":"beforeTrigger(Trigger, TriggerContext, Object)","u":"beforeTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.impl","c":"Utils","l":"brackets(Object)","u":"brackets(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTriggerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTriggerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"build()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"builder()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"buildExpression(String)","u":"buildExpression(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerEvaluator","l":"byAfter(AfterTriggerEvaluator)","u":"byAfter(io.github.zero88.schedulerx.trigger.AfterTriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerEvaluator","l":"byBefore(BeforeTriggerEvaluator)","u":"byBefore(io.github.zero88.schedulerx.trigger.BeforeTriggerEvaluator)"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"byDefault()"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"byDefault()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx","c":"Scheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"cancel()"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"cancel(String, long)","u":"cancel(java.lang.String,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"Utils","l":"castOrNull(Object, boolean)","u":"castOrNull(java.lang.Object,boolean)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition","l":"cause()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"InstantRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateTimeRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalTimeRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetDateTimeRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetTimeRange","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"check(Instant, Duration)","u":"check(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"checkNext(int, String, int, int)","u":"checkNext(int,java.lang.String,int,int)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"clock()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"clock()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerConfig","l":"clock()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"complete(OUT)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"complete(OUT)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"complete(OUT)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"completed()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"completedAt()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"CONDITION_IS_NOT_MATCHED"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"condition()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AnyEventTriggerPredicate","l":"convert(MultiMap, Object)","u":"convert(io.vertx.core.MultiMap,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"convert(MultiMap, Object)","u":"convert(io.vertx.core.MultiMap,java.lang.Object)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"create()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AutoCastMessageBody","l":"create()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerEvaluator","l":"create(BeforeTriggerEvaluator, AfterTriggerEvaluator)","u":"create(io.github.zero88.schedulerx.trigger.BeforeTriggerEvaluator,io.github.zero88.schedulerx.trigger.AfterTriggerEvaluator)"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"create(D)"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"create(D, Object)","u":"create(D,java.lang.Object)"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"create(Duration)","u":"create(java.time.Duration)"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"create(Duration, Duration)","u":"create(java.time.Duration,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"create(EventTriggerPredicate.MessageConverter<T>, EventTriggerPredicate.MessageFilter<T>)","u":"create(io.github.zero88.schedulerx.trigger.predicate.EventTriggerPredicate.MessageConverter,io.github.zero88.schedulerx.trigger.predicate.EventTriggerPredicate.MessageFilter)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"create(EventTriggerPredicate.MessageFilter<T>)","u":"create(io.github.zero88.schedulerx.trigger.predicate.EventTriggerPredicate.MessageFilter)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(Instant)","u":"create(java.time.Instant)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(Instant, Duration)","u":"create(java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(List<Timeframe>)","u":"create(java.util.List)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(List<Timeframe>, Duration)","u":"create(java.util.List,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(List<Timeframe>, Instant)","u":"create(java.util.List,java.time.Instant)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"create(List<Timeframe>, Instant, Duration)","u":"create(java.util.List,java.time.Instant,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"create(Map<String, Object>)","u":"create(java.util.Map)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"create(Map<String, Object>)","u":"create(java.util.Map)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"create(Map<String, Object>)","u":"create(java.util.Map)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"create(String, Object, Object)","u":"create(java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"io.github.zero88.schedulerx","c":"WorkerExecutorFactory","l":"create(Vertx, TimeoutPolicy)","u":"create(io.vertx.core.Vertx,io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx","c":"WorkerExecutorFactory","l":"create(Vertx, TimeoutPolicy, String)","u":"create(io.vertx.core.Vertx,io.github.zero88.schedulerx.TimeoutPolicy,java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"CronExpression(CronExpression)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronExpression)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"CronExpression(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"CronScheduler(CronScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"CronScheduler(CronScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"CronScheduler(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"CronScheduler(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"CronSchedulerBuilder(CronSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"CronSchedulerBuilder(CronSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"CronSchedulerBuilder(CronSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"CronSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"CronSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"data()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"DAY_OF_MONTH"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"DAY_OF_WEEK"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"dayMap"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"daysOfMonth"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"daysOfWeek"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_MAX_EVALUATION_TIMEOUT"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_MAX_EXECUTION_TIMEOUT"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_MAX_TRIGGER_PREVIEW_COUNT"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_MAX_TRIGGER_RULE_LEEWAY"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_WORKER_THREAD_POOL_SIZE"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"DEFAULT_WORKER_THREAD_PREFIX"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"DefaultTriggerEvaluator()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"TriggerRepresentation","l":"display()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"TriggerRepresentation","l":"display(String)","u":"display(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"display(String)","u":"display(java.lang.String)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"doStart(WorkerExecutor)","u":"doStart(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"doStop(long, TriggerContext)","u":"doStop(long,io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"empty()"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"empty(Object)","u":"empty(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AutoCastMessageBody","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"ERROR"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"error()"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"error(String, String, Throwable)","u":"error(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"EVALUATION_TIMEOUT"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"evaluationTimeout()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"EVENT_PREDICATE"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"EVENT_PREDICATE_EXTRA"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"EventScheduler(EventScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"EventScheduler(EventScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"EventScheduler(EventScheduler, TypeArg<T>)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventScheduler,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"EventScheduler(Object, TypeArg<T>)","u":"%3Cinit%3E(java.lang.Object,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"EventScheduler(Object, TypeArg<T>)","u":"%3Cinit%3E(java.lang.Object,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"EventSchedulerBuilder(EventSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"EventSchedulerBuilder(EventSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"EventSchedulerBuilder(EventSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>, TypeArg<T>)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"EventSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>, TypeArg<T>)","u":"%3Cinit%3E(java.lang.Object,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"EventSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>, TypeArg<T>)","u":"%3Cinit%3E(java.lang.Object,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.EventTriggerPredicateException","l":"EventTriggerPredicateException(JsonObject)","u":"%3Cinit%3E(io.vertx.core.json.JsonObject)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.EventTriggerPredicateException","l":"EventTriggerPredicateException(JsonObject, Throwable)","u":"%3Cinit%3E(io.vertx.core.json.JsonObject,java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.EventTriggerPredicateException","l":"EventTriggerPredicateException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.EventTriggerPredicateException","l":"EventTriggerPredicateException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx","c":"Job","l":"execute(JobData<INPUT>, ExecutionContext<OUTPUT>)","u":"execute(io.github.zero88.schedulerx.JobData,io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"EXECUTED"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"executed(TriggerContext)","u":"executed(io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"executedAt()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"executedAt()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"executedAt()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"executedAt()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"executeJob(ExecutionContext<OUT>)","u":"executeJob(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx","c":"JobExecutor","l":"executeJob(ExecutionContext<OUT>)","u":"executeJob(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"executing()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"ExecutionContext(ExecutionContext)","u":"%3Cinit%3E(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"ExecutionContext(ExecutionContext)","u":"%3Cinit%3E(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"ExecutionContext(ExecutionContext, TypeArg<OUT>)","u":"%3Cinit%3E(io.github.zero88.schedulerx.ExecutionContext,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"ExecutionContext(Object, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"ExecutionContext(Object, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"executionTimeout()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTriggerBuilder","l":"expression(String)","u":"expression(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"expressionParsed"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"externalId()"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"externalId()"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"JsonSchemaMessageFilter","l":"extra()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerExtensionPredicate","l":"extra()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"fail(Throwable)","u":"fail(java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"fail(Throwable)","u":"fail(java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"fail(Throwable)","u":"fail(java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"FAILED_TO_SCHEDULE"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"findNextWhiteSpace(int, String)","u":"findNextWhiteSpace(int,java.lang.String)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"finishedAt()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"firedAt()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"firedAt()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"forceStopExecution()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"forceStopExecution()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"forceStopExecution()"},{"p":"io.github.zero88.schedulerx.impl","c":"Utils.HumanReadableTimeFormat","l":"format(Duration)","u":"format(java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"from()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"from()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"from(T)"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"SchemaRepositoryHolder","l":"get()"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"SchemaRepositoryProvider","l":"get()"},{"p":"io.github.zero88.schedulerx","c":"JobData","l":"get()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"getAddress()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getCronExpression()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getDayOfWeekNumber(String)","u":"getDayOfWeekNumber(java.lang.String)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"getDelegate()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.EventTriggerPredicateException","l":"getErrors()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"getExpression()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getExpressionSetSummary(ArrayList<Integer>)","u":"getExpressionSetSummary(java.util.ArrayList)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getExpressionSetSummary(Set<Integer>)","u":"getExpressionSetSummary(java.util.Set)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getExpressionSummary()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"getInitialDelay()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"getInitialDelayTimeUnit()"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"getInstance()"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"SchemaRepositoryHolder","l":"getInstance()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"TriggerRepresentationServiceLoader","l":"getInstance()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"getInterval()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"getIntervalTimeUnit()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getLastDayOfMonth(int, int)","u":"getLastDayOfMonth(int,int)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getMonthNumber(String)","u":"getMonthNumber(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getNextInvalidTimeAfter(Date)","u":"getNextInvalidTimeAfter(java.util.Date)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getNextValidTimeAfter(Date)","u":"getNextValidTimeAfter(java.util.Date)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getNumericValue(String, int)","u":"getNumericValue(java.lang.String,int)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"getPredicate()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"TriggerRepresentationServiceLoader","l":"getProvider(String)","u":"getProvider(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"getRepeat()"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"getRule()"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"getStartedAt()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getTimeAfter(Date)","u":"getTimeAfter(java.util.Date)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"getTimes()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getTimeZone()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"getTimeZone()"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"getTimeZone()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"getValue(int, String, int)","u":"getValue(int,java.lang.String,int)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"hashCode()"},{"p":"io.github.zero88.schedulerx","c":"TimeoutPolicy","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AutoCastMessageBody","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"hashCode()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"HOUR"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"hours"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"ignoreType(EventTriggerPredicate.MessageFilter<Object>)","u":"ignoreType(io.github.zero88.schedulerx.trigger.predicate.EventTriggerPredicate.MessageFilter)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"info()"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"init(BeforeTriggerEvaluator, AfterTriggerEvaluator)","u":"init(io.github.zero88.schedulerx.trigger.BeforeTriggerEvaluator,io.github.zero88.schedulerx.trigger.AfterTriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"initialDelay()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"initialDelay(Duration)","u":"initialDelay(java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"initialDelay(long)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"initialDelayTimeUnit(TimeUnit)","u":"initialDelayTimeUnit(java.util.concurrent.TimeUnit)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AllowAnyMessageBodyType","l":"INSTANCE"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AnyEventTriggerPredicate","l":"INSTANCE"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"InstantRange","l":"InstantRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"internalAfterTrigger(Trigger, TriggerContext, Object, long)","u":"internalAfterTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"DefaultTriggerEvaluator","l":"internalBeforeTrigger(Trigger, TriggerContext, Object)","u":"internalBeforeTrigger(io.github.zero88.schedulerx.trigger.Trigger,io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"interval()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"interval(Duration)","u":"interval(java.time.Duration)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"interval(long)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"IntervalScheduler(IntervalScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.IntervalScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"IntervalScheduler(IntervalScheduler)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.IntervalScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"IntervalScheduler(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"IntervalScheduler(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"IntervalSchedulerBuilder(IntervalSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"IntervalSchedulerBuilder(IntervalSchedulerBuilder)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"IntervalSchedulerBuilder(IntervalSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"IntervalSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"IntervalSchedulerBuilder(Object, TypeArg<IN>, TypeArg<OUT>)","u":"%3Cinit%3E(java.lang.Object,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"intervalTimeUnit(TimeUnit)","u":"intervalTimeUnit(java.util.concurrent.TimeUnit)"},{"p":"io.github.zero88.schedulerx","c":"Job","l":"isAsync()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"isError()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isError()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"isExceeded(Instant)","u":"isExceeded(java.time.Instant)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isExecuted()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"isForceStop()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"isForceStop()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"isForceStop()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isKickoff()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"isLeapYear(int)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"isLocalOnly()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isReadiness()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isReady()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"isReschedule()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"isSatisfiedBy(Date)","u":"isSatisfiedBy(java.util.Date)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isScheduled()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isSkipped()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"isStopped()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"isTimeout()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"isValidExpression(String)","u":"isValidExpression(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"JOB_IS_RUNNING"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"job()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"job()"},{"p":"io.github.zero88.schedulerx","c":"JobExecutorConfig","l":"job()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"jobData()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"jobData()"},{"p":"io.github.zero88.schedulerx","c":"JobExecutorConfig","l":"jobData()"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"JsonSchemaMessageFilter","l":"JsonSchemaMessageFilter()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"KICKOFF"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"kickoff(String, Instant, long)","u":"kickoff(java.lang.String,java.time.Instant,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"kickoff(String, Instant, long, T)","u":"kickoff(java.lang.String,java.time.Instant,long,T)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"lastData()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"lastdayOffset"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"lastdayOfMonth"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"lastdayOfWeek"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"lastError()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"leeway()"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"JsonSchemaMessageFilter","l":"load(Map<String, Object>)","u":"load(java.util.Map)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerExtensionPredicate","l":"load(Map<String, Object>)","u":"load(java.util.Map)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"LocalDateRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateTimeRange","l":"LocalDateTimeRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTriggerBuilder","l":"localOnly(boolean)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalTimeRange","l":"LocalTimeRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"log(Instant, String)","u":"log(java.time.Instant,java.lang.String)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"log(Instant, String, long)","u":"log(java.time.Instant,java.lang.String,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"log(Instant, String, long, long)","u":"log(java.time.Instant,java.lang.String,long,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"LOGGER"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"LOGGER"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"MAX_YEAR"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"maxEvaluationTimeout"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"maxExecutionTimeout"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"maxTriggerPreviewCount"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"maxTriggerRuleLeeway"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"MINUTE"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"minutes"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"monitor()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"monitor()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerConfig","l":"monitor()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"MONTH"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"monthMap"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"months"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"MSG_CONVERTER"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"MSG_CONVERTER_EXTRA"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"MSG_FILTER"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.JsonKey","l":"MSG_FILTER_EXTRA"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"nearestWeekday"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"newInstance(CronScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"newInstance(CronScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"newInstance(CronSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"newInstance(CronSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"newInstance(CronSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"newInstance(CronSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.trigger.CronSchedulerBuilder,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"newInstance(EventScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"newInstance(EventScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"newInstance(EventScheduler, TypeArg<T>)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventScheduler,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"newInstance(EventScheduler, TypeArg<T>)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventScheduler,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"newInstance(EventSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"newInstance(EventSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"newInstance(EventSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>, TypeArg<T>)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"newInstance(EventSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>, TypeArg<T>)","u":"newInstance(io.github.zero88.schedulerx.trigger.EventSchedulerBuilder,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"newInstance(ExecutionContext)","u":"newInstance(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"newInstance(ExecutionContext)","u":"newInstance(io.github.zero88.schedulerx.ExecutionContext)"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"newInstance(ExecutionContext, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.ExecutionContext,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"newInstance(ExecutionContext, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.ExecutionContext,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"newInstance(IntervalScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalScheduler)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"newInstance(IntervalScheduler)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalScheduler)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"newInstance(IntervalSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"newInstance(IntervalSchedulerBuilder)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"newInstance(IntervalSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"newInstance(IntervalSchedulerBuilder, TypeArg<IN>, TypeArg<OUT>)","u":"newInstance(io.github.zero88.schedulerx.trigger.IntervalSchedulerBuilder,io.vertx.lang.rx.TypeArg,io.vertx.lang.rx.TypeArg)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"nextTriggerAfter(Instant)","u":"nextTriggerAfter(java.time.Instant)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"NO_SPEC"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"NO_SPEC_INT"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"NOOP"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeframeValidator","l":"normalize(TimeParser<T>, Object)","u":"normalize(io.github.zero88.schedulerx.trigger.rule.TimeParser,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"NOT_YET_SCHEDULED"},{"p":"io.github.zero88.schedulerx","c":"TimeClock","l":"now()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"nthdayOfWeek"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"of(T, T)","u":"of(T,T)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetDateTimeRange","l":"OffsetDateTimeRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetTimeRange","l":"OffsetTimeRange()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"ON_CANCEL"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"ON_RESCHEDULE"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"ON_SCHEDULE"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onComplete(TriggerContext)","u":"onComplete(io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"onCompleted(ExecutionResult<OUT>)","u":"onCompleted(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingMonitor","l":"onCompleted(ExecutionResult<OUT>)","u":"onCompleted(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"onEach(ExecutionResult<OUT>)","u":"onEach(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingMonitor","l":"onEach(ExecutionResult<OUT>)","u":"onEach(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onEvaluationAfterTrigger(WorkerExecutor, TriggerContext, long)","u":"onEvaluationAfterTrigger(io.vertx.core.WorkerExecutor,io.github.zero88.schedulerx.trigger.TriggerContext,long)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onEvaluationBeforeTrigger(WorkerExecutor, TriggerContext)","u":"onEvaluationBeforeTrigger(io.vertx.core.WorkerExecutor,io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onFire(long)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"onMisfire(ExecutionResult<OUT>)","u":"onMisfire(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingMonitor","l":"onMisfire(ExecutionResult<OUT>)","u":"onMisfire(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onMisfire(TriggerContext)","u":"onMisfire(io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onProcess(WorkerExecutor, TriggerContext)","u":"onProcess(io.vertx.core.WorkerExecutor,io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onResult(ExecutionContext<OUT>, Throwable)","u":"onResult(io.github.zero88.schedulerx.ExecutionContext,java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"onSchedule(ExecutionResult<OUT>)","u":"onSchedule(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingMonitor","l":"onSchedule(ExecutionResult<OUT>)","u":"onSchedule(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onSchedule(long)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onTrigger(WorkerExecutor, TriggerContext)","u":"onTrigger(io.vertx.core.WorkerExecutor,io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingLogMonitor","l":"onUnableSchedule(ExecutionResult<OUT>)","u":"onUnableSchedule(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx","c":"SchedulingMonitor","l":"onUnableSchedule(ExecutionResult<OUT>)","u":"onUnableSchedule(io.github.zero88.schedulerx.ExecutionResult)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"onUnableSchedule(Throwable)","u":"onUnableSchedule(java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"InstantRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateTimeRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalTimeRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetDateTimeRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetTimeRange","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeParser","l":"parse(Object)","u":"parse(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"parser()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"parser()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"pending()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTriggerBuilder","l":"predicate(EventTriggerPredicate<T>)","u":"predicate(io.github.zero88.schedulerx.trigger.predicate.EventTriggerPredicate)"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"preview()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"preview(PreviewParameter)","u":"preview(io.github.zero88.schedulerx.trigger.PreviewParameter)"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"preview(PreviewParameter)","u":"preview(io.github.zero88.schedulerx.trigger.PreviewParameter)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"PreviewParameter()","u":"%3Cinit%3E()"},{"p":"io.github.zero88.schedulerx.impl","c":"Utils","l":"randomPositiveInt()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"READY"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"ready(TriggerContext)","u":"ready(io.github.zero88.schedulerx.trigger.TriggerContext)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition","l":"reasonCode()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"registerTimer(WorkerExecutor)","u":"registerTimer(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"REPEAT_INDEFINITELY"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"repeat(long)"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"rescheduled(String, long)","u":"rescheduled(java.lang.String,long)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"rescheduledAt()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"round()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"round()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"round()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"round()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"round()"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"rule()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTriggerBuilder","l":"rule(TriggerRule)","u":"rule(io.github.zero88.schedulerx.trigger.rule.TriggerRule)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTriggerBuilder","l":"rule(TriggerRule)","u":"rule(io.github.zero88.schedulerx.trigger.rule.TriggerRule)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTriggerBuilder","l":"rule(TriggerRule)","u":"rule(io.github.zero88.schedulerx.trigger.rule.TriggerRule)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"satisfy(Instant)","u":"satisfy(java.time.Instant)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"SCHEDULED"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"scheduled(String)","u":"scheduled(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"SECOND"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"seconds"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"set(String, Object)","u":"set(java.lang.String,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"set(String, Object)","u":"set(java.lang.String,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"setCalendarHour(Calendar, int)","u":"setCalendarHour(java.util.Calendar,int)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setJob(Job<IN, OUT>)","u":"setJob(io.github.zero88.schedulerx.Job)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setJobData(JobData<IN>)","u":"setJobData(io.github.zero88.schedulerx.JobData)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setMonitor(SchedulingMonitor<OUT>)","u":"setMonitor(io.github.zero88.schedulerx.SchedulingMonitor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setRule(TriggerRule)","u":"setRule(io.github.zero88.schedulerx.trigger.rule.TriggerRule)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setStartedAt(Instant)","u":"setStartedAt(java.time.Instant)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setTimeoutPolicy(TimeoutPolicy)","u":"setTimeoutPolicy(io.github.zero88.schedulerx.TimeoutPolicy)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setTimes(int)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setTimeZone(TimeZone)","u":"setTimeZone(java.util.TimeZone)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"setTimeZone(TimeZone)","u":"setTimeZone(java.util.TimeZone)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setTimeZone(ZoneId)","u":"setTimeZone(java.time.ZoneId)"},{"p":"io.github.zero88.schedulerx.trigger","c":"PreviewParameter","l":"setTimeZone(ZoneOffset)","u":"setTimeZone(java.time.ZoneOffset)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setTrigger(CronTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.CronTrigger)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setTrigger(CronTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.CronTrigger)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setTrigger(CronTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.CronTrigger)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setTrigger(EventTrigger<T>)","u":"setTrigger(io.github.zero88.schedulerx.trigger.EventTrigger)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setTrigger(EventTrigger<T>)","u":"setTrigger(io.github.zero88.schedulerx.trigger.EventTrigger)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setTrigger(EventTrigger<T>)","u":"setTrigger(io.github.zero88.schedulerx.trigger.EventTrigger)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setTrigger(IntervalTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.IntervalTrigger)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setTrigger(IntervalTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.IntervalTrigger)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setTrigger(IntervalTrigger)","u":"setTrigger(io.github.zero88.schedulerx.trigger.IntervalTrigger)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setTrigger(T)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setTrigger(TRIGGER)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setTriggerEvaluator(TriggerEvaluator)","u":"setTriggerEvaluator(io.github.zero88.schedulerx.trigger.TriggerEvaluator)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"setValues(Object, Object)","u":"setValues(java.lang.Object,java.lang.Object)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.core.Vertx)"},{"p":"io.github.zero88.schedulerx","c":"SchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.core.Vertx)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.core.Vertx)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.core.Vertx)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.core.Vertx)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.mutiny.core.Vertx)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.mutiny.core.Vertx)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.mutiny.core.Vertx)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.rxjava3.core.Vertx)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.rxjava3.core.Vertx)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"setVertx(Vertx)","u":"setVertx(io.vertx.rxjava3.core.Vertx)"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"skip(TriggerContext, String)","u":"skip(io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.String)"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"skip(TriggerContext, String, Throwable)","u":"skip(io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.String,java.lang.Throwable)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"SKIPPED"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"skipWhiteSpace(int, String)","u":"skipWhiteSpace(int,java.lang.String)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx","c":"Scheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"start()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx","c":"Scheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.mutiny.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.mutiny.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.mutiny.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.rxjava3.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.rxjava3.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"start(WorkerExecutor)","u":"start(io.vertx.rxjava3.core.WorkerExecutor)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition","l":"status()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"STOP_BY_CONFIG"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"STOP_BY_JOB"},{"p":"io.github.zero88.schedulerx.impl","c":"TriggerContextFactory","l":"stop(TriggerContext, String)","u":"stop(io.github.zero88.schedulerx.trigger.TriggerContext,java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"STOPPED"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"storeExpressionVals(int, String, int)","u":"storeExpressionVals(int,java.lang.String,int)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AnyEventTriggerPredicate","l":"test(Object)","u":"test(java.lang.Object)"},{"p":"io.github.zero88.schedulerx.ext.trigger.predicate","c":"JsonSchemaMessageFilter","l":"test(T)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate.MessageFilter","l":"test(T)"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"test(T)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"tick()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"tick()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerContext","l":"tick()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"timeframes()"},{"p":"io.github.zero88.schedulerx","c":"TimeoutBlock","l":"TimeoutBlock(Vertx, Duration)","u":"%3Cinit%3E(io.vertx.core.Vertx,java.time.Duration)"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"timeoutPolicy()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"timeoutPolicy()"},{"p":"io.github.zero88.schedulerx","c":"JobExecutorConfig","l":"timeoutPolicy()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerState","l":"timerId()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTriggerBuilder","l":"timeZone(TimeZone)","u":"timeZone(java.util.TimeZone)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"to()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"to()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"to(T)"},{"p":"io.github.zero88.schedulerx.impl","c":"Utils","l":"toChronoUnit(TimeUnit)","u":"toChronoUnit(java.util.concurrent.TimeUnit)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"toJson()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"toJson()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"toJson()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AnyEventTriggerPredicate","l":"toJson()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"EventTriggerPredicate","l":"toJson()"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"toJson()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"toString()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalSchedulerBuilder","l":"toString()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"toString()"},{"p":"io.github.zero88.schedulerx.trigger.predicate","c":"AnyEventTriggerPredicate","l":"toString()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"toString()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"TRIGGER_TYPE"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"TRIGGER_TYPE"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"TRIGGER_TYPE"},{"p":"io.github.zero88.schedulerx","c":"SchedulerConfig","l":"trigger()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventSchedulerBuilder","l":"trigger()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"trigger()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"triggerContext()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"triggerContext()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"triggerContext()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"triggerContext()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"triggeredAt()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"triggeredAt()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"triggeredAt()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"triggeredAt()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"triggerEvaluator()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"triggerEvaluator()"},{"p":"io.github.zero88.schedulerx","c":"SchedulerConfig","l":"triggerEvaluator()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger","c":"HasTriggerType","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"CronTriggerRepresentationMapper","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"EventTriggerRepresentationMapper","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.repr","c":"IntervalTriggerRepresentationMapper","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"InstantRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateTimeRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalTimeRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetDateTimeRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetTimeRange","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"type()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.ReasonCode","l":"UNEXPECTED_ERROR"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"unregisterTimer(long)"},{"p":"io.github.zero88.schedulerx","c":"ExecutionResult","l":"unscheduledAt()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TriggerRule","l":"until()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronTrigger","l":"validate()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventTrigger","l":"validate()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalTrigger","l":"validate()"},{"p":"io.github.zero88.schedulerx.trigger","c":"Trigger","l":"validate()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeframeValidator","l":"validate(Timeframe)","u":"validate(io.github.zero88.schedulerx.trigger.rule.Timeframe)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"TimeRangeConstraint","l":"validate(Timeframe)","u":"validate(io.github.zero88.schedulerx.trigger.rule.Timeframe)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"validateExpression(String)","u":"validateExpression(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"InstantRange","l":"validator()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateRange","l":"validator()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"LocalDateTimeRange","l":"validator()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"OffsetDateTimeRange","l":"validator()"},{"p":"io.github.zero88.schedulerx.trigger.rule","c":"Timeframe","l":"validator()"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.github.zero88.schedulerx.trigger","c":"TriggerCondition.TriggerStatus","l":"values()"},{"p":"io.github.zero88.schedulerx","c":"ExecutionContext","l":"vertx()"},{"p":"io.github.zero88.schedulerx","c":"HasVertx","l":"vertx()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.impl","c":"AbstractSchedulerBuilder","l":"vertx()"},{"p":"io.github.zero88.schedulerx.mutiny","c":"ExecutionContext","l":"vertx()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"CronScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"EventScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.mutiny.trigger","c":"IntervalScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.rxjava3","c":"ExecutionContext","l":"vertx()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"CronScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"EventScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.rxjava3.trigger","c":"IntervalScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.trigger","c":"EventScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx.trigger","c":"IntervalScheduler","l":"vertx()"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"workerThreadPoolSize"},{"p":"io.github.zero88.schedulerx","c":"DefaultOptions","l":"workerThreadPrefix"},{"p":"io.github.zero88.schedulerx","c":"TimeoutBlock","l":"wrap(Promise<T>)","u":"wrap(io.vertx.core.Promise)"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"YEAR"},{"p":"io.github.zero88.schedulerx.trigger","c":"CronExpression","l":"years"}];updateSearchResults();